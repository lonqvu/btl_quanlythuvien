package quanlythuvien;

/**
 *
 * @author loqco
 */
import Controller.DAO;
import DATA.QuanLyBao;
import java.awt.Color;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import quanlythuvien.SACH_FORM;
import DATA.QuanLyTapChi;
import DATA.QuanLyUser;
import java.io.InputStream;
import java.io.Reader;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Array;
import java.sql.Blob;
import java.sql.Clob;
import java.sql.Connection;
import java.sql.NClob;
import java.sql.ParameterMetaData;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.table.TableModel;
import java.sql.PreparedStatement;
import java.sql.Ref;
import java.sql.ResultSetMetaData;
import java.sql.RowId;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.SQLXML;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Scanner;

public class User_Form extends javax.swing.JFrame {

    /**
     * Creates new form User_Form
     */
    public User_Form() {
        initComponents();
        Date date = new Date();
        txtNgaySinh.setDate(date);

        Show();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ADMIN = new javax.swing.JRadioButton();
        MEMBER = new javax.swing.JRadioButton();
        txtID = new javax.swing.JTextField();
        txtTK = new javax.swing.JTextField();
        txtMK = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        Xóa1 = new javax.swing.JButton();
        A = new javax.swing.JLabel();
        B = new javax.swing.JLabel();
        C = new javax.swing.JLabel();
        D = new javax.swing.JLabel();
        F = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        txtNgaySinh = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Xóa = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnReload1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quán lý người dùng");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Users-icon.png"))); // NOI18N
        jLabel1.setText("Quản lý người dùng");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin tài khoản", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Tên tài khoản");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Mật khẩu");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Họ và Tên");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Ngày sinh");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("SĐT");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vai trò", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        buttonGroup1.add(ADMIN);
        ADMIN.setText("ADMIN");
        ADMIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADMINActionPerformed(evt);
            }
        });

        buttonGroup1.add(MEMBER);
        MEMBER.setText("MEMBER");
        MEMBER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MEMBERActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(ADMIN, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(MEMBER, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ADMIN)
                    .addComponent(MEMBER))
                .addContainerGap())
        );

        txtHoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoTenActionPerformed(evt);
            }
        });

        Xóa1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Xóa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Refresh.png"))); // NOI18N
        Xóa1.setText("Clear");
        Xóa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Xóa1ActionPerformed(evt);
            }
        });

        A.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        B.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        C.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        D.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        F.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });

        txtNgaySinh.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Xóa1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                                        .addComponent(txtHoTen)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(A)
                            .addComponent(B)
                            .addComponent(C)
                            .addComponent(D)
                            .addComponent(F))
                        .addGap(46, 46, 46))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(17, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(A)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(F)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Xóa1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ID", "User", "Password", "Họ Tên", "Ngày sinh", "SĐT", "Vai trò"
            }
        ));
        tbUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUserMouseClicked(evt);
            }
        });
        tbUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbUserKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbUser);

        btnThem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Edit.png"))); // NOI18N
        jButton2.setText("Sửa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Xóa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Xóa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Delete.png"))); // NOI18N
        Xóa.setText("Xóa");
        Xóa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XóaActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Search-icon (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnReload1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnReload1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Exit.png"))); // NOI18N
        btnReload1.setText("Cancel");
        btnReload1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReload1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(324, 324, 324)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(Xóa, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReload1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Xóa, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReload1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        A.setText("");
        B.setText("");
        C.setText("");
        D.setText("");
        F.setText("");
        try {
            if (txtID.getText().trim().compareTo("") == 0 || txtTK.getText().trim().compareTo("") == 0 || txtMK.getText().trim().compareTo("") == 0 || txtSDT.getText().trim().compareTo("") == 0 || txtSDT.getText().trim().compareTo("") == 0) {
                JOptionPane.showConfirmDialog(null, "Thông tin không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                if (txtID.getText().trim().compareTo("") == 0) {
                    A.setText("*");
                    A.setForeground(Color.red);

                }
                if (txtTK.getText().trim().compareTo("") == 0) {
                    B.setText("*");
                    B.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Tên Sách không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    //return;
                }
                if (txtMK.getText().trim().compareTo("") == 0) {
                    C.setText("*");
                    C.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Tên tác giả không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    //return;
                }

                if (txtSDT.getText().trim().compareTo("") == 0) {
                    D.setText("*");
                    D.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Số bản phát hành phải lớn hơn 0 hoặc không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE); 
                }
                if (txtSDT.getText().trim().compareTo("") == 0) {
                    F.setText("*");
                    F.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "NXB không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

                }
            } else if (txtSDT.getText().length() <= 4) {
                F.setText("*");
                F.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "Số điện thoại không hợp lệ!\nChú ý: SĐT phải từ 4 số trỏ lên");
            } else {
                
                try {
                    con = DAO.getConnection();
                    String themtapchi = "insert Account_(ID, TenTaiKhoan, MatKhau, HoTen, NgaySinh, SDT, VaiTro) values(?,?,?,?,?,?,?)";
                    PreparedStatement pts = con.prepareStatement(themtapchi);
                    int i;
                    pts.setString(1, txtID.getText());
                    pts.setString(2, txtTK.getText());
                    pts.setString(3, txtMK.getText());
                    pts.setString(4, txtHoTen.getText());
                    SimpleDateFormat thang = new SimpleDateFormat("yyyy-MM-dd");
                    String setdate = thang.format(txtNgaySinh.getDate());
                    pts.setString(5, setdate);
                    pts.setString(6, txtSDT.getText());

                    pts.setString(7, vaitro);

                    int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm " + txtTK.getText() + "!", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (result == JOptionPane.YES_OPTION) {
                        pts.executeUpdate();
                        DefaultTableModel model = (DefaultTableModel) tbUser.getModel();
                        model.setRowCount(0);
                        Show();
                        JOptionPane.showMessageDialog(null, "Thêm user thành công");
                        con.close();
                    }
                } catch (Exception e) {
                    JOptionPane.showConfirmDialog(null, "Không thể thêm\nLỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

                }
            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Lỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tbUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbUserKeyPressed

    }//GEN-LAST:event_tbUserKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        A.setText("");
        B.setText("");
        C.setText("");
        D.setText("");
        F.setText("");

        if (txtID.getText().trim().compareTo("") == 0 || txtTK.getText().trim().compareTo("") == 0 || txtMK.getText().trim().compareTo("") == 0 || txtSDT.getText().trim().compareTo("") == 0 || txtSDT.getText().trim().compareTo("") == 0) {
            JOptionPane.showConfirmDialog(null, "Thông tin không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            if (txtID.getText().trim().compareTo("") == 0) {
                A.setText("*");
                A.setForeground(Color.red);
                //JOptionPane.showConfirmDialog(null, "Mã Sách không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                //return;
            }
            if (txtTK.getText().trim().compareTo("") == 0) {
                B.setText("*");
                B.setForeground(Color.red);
                //JOptionPane.showConfirmDialog(null, "Tên Sách không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                //return;
            }
            if (txtMK.getText().trim().compareTo("") == 0) {
                C.setText("*");
                C.setForeground(Color.red);
                //JOptionPane.showConfirmDialog(null, "Tên tác giả không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                //return;
            }

            if (txtSDT.getText().trim().compareTo("") == 0) {
                D.setText("*");
                D.setForeground(Color.red);
                //JOptionPane.showConfirmDialog(null, "Số bản phát hành phải lớn hơn 0 hoặc không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE); 
            }
            if (txtSDT.getText().trim().compareTo("") == 0) {
                F.setText("*");
                F.setForeground(Color.red);
                //JOptionPane.showConfirmDialog(null, "NXB không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

            }
        } 
        else if (txtSDT.getText().length() <= 4) {
                F.setText("*");
                F.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "Số điện thoại không hợp lệ!\nChú ý: SĐT phải từ 4 số trỏ lên");
            }
        else {
            try {
                con = DAO.getConnection();
                String suauser = "UPDATE Account_ SET ID = ?, TenTaiKhoan = ?, MatKhau = ?, HoTen = ?, NgaySinh =?, SDT = ?, VaiTro= ? where ID = ?";
                PreparedStatement pts = con.prepareStatement(suauser);

                pts.setString(1, txtID.getText());
                pts.setString(2, txtTK.getText());
                pts.setString(3, txtMK.getText());
                pts.setString(4, txtSDT.getText());
                SimpleDateFormat thang = new SimpleDateFormat("yyyy-MM-dd");
                String setdate = thang.format(txtNgaySinh.getDate());
                pts.setString(5, setdate);
                pts.setString(6, txtSDT.getText());
                boolean b = true;
                if (ADMIN.isSelected()) {
                    pts.setString(7, ADMIN.getText());
                } else {
                    pts.setString(7, MEMBER.getText());
                }
                pts.setString(8, txtID.getText());
                int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn sửa " + txtTK.getText() + "!", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (result == JOptionPane.YES_OPTION) {
                    pts.executeUpdate();
                    DefaultTableModel model = (DefaultTableModel) tbUser.getModel();
                    model.setRowCount(0);
                    Show();
                    JOptionPane.showMessageDialog(null, "Sửa user thành công");
                    con.close();
                }

            } catch (Exception e) {
                JOptionPane.showConfirmDialog(null, "Không thể sửa\nLỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tbUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUserMouseClicked
        try {
            int i = tbUser.getSelectedRow();
            TableModel model = tbUser.getModel();
            Date click = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(i, 5));
            txtID.setText(model.getValueAt(i, 1).toString());
            txtTK.setText(model.getValueAt(i, 2).toString());
            txtMK.setText(model.getValueAt(i, 3).toString());
            txtHoTen.setText(model.getValueAt(i, 4).toString());        
            txtNgaySinh.setDate(click);
            txtSDT.setText(model.getValueAt(i, 6).toString());
            vaitro = model.getValueAt(i, 7).toString();
            if (vaitro.equals("ADMIN")) {
                ADMIN.setSelected(true);
            } else {
                MEMBER.setSelected(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_tbUserMouseClicked
    private String vaitro;
    private void ADMINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADMINActionPerformed
        vaitro = "ADMIN";
    }//GEN-LAST:event_ADMINActionPerformed

    private void MEMBERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MEMBERActionPerformed
        vaitro = "MEMBER";

    }//GEN-LAST:event_MEMBERActionPerformed

    private void XóaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XóaActionPerformed
       if (txtID.getText().trim().compareTo("") == 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn user cần xóa", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
       else{
        try {
            con = DAO.getConnection();
            String xoa = "DELETE Account_ where ID = ?";
            PreparedStatement pts = con.prepareStatement(xoa);
            pts.setString(1, txtID.getText());
            int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa " + txtTK.getText(), "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                pts.executeUpdate();
                DefaultTableModel model = (DefaultTableModel) tbUser.getModel();
                model.setRowCount(0);
                Show();
                JOptionPane.showMessageDialog(null, "Xóa user thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            }
            con.close();
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Không thể xóa\nLỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
       }
    }//GEN-LAST:event_XóaActionPerformed

    private void Xóa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Xóa1ActionPerformed
        A.setText("");
        B.setText("");
        C.setText("");
        D.setText("");
        F.setText("");
        txtID.setText("");
        txtSDT.setText("");
        txtMK.setText("");
        txtTK.setText("");
        txtTimKiem.setText("");
        txtSDT.setText("");
        Date date = new Date();
        txtNgaySinh.setDate(date);
        txtSDT.setText("");
        ADMIN.setSelected(true);
        DefaultTableModel model = (DefaultTableModel) tbUser.getModel();
        model.setRowCount(0);
        Show();

    }//GEN-LAST:event_Xóa1ActionPerformed

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        ArrayList<QuanLyUser> finduser = UserList_FIND();
        DefaultTableModel model = (DefaultTableModel) tbUser.getModel();
        model.setRowCount(0);
        Object[] row = new Object[8];
        for (int i = 0; i < finduser.size(); i++) {
            row[0] = i;
            row[1] = finduser.get(i).getID();
            row[2] = finduser.get(i).getTenTaiKhoan();
            row[3] = finduser.get(i).getMatKhau();
            row[4] = finduser.get(i).getHoTen();
            row[5] = finduser.get(i).getNgaySinh();
            row[6] = finduser.get(i).getSĐT();
            row[7] = finduser.get(i).getVaiTro();
            model.addRow(row);
        }
    }//GEN-LAST:event_txtTimKiemKeyPressed

    private void btnReload1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReload1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnReload1ActionPerformed

    private void txtHoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoTenActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    /**
     * @param args the command line arguments
     */
    Connection con = null;
    Statement st = null;
    ResultSet rs = null;

    public ArrayList<QuanLyUser> UserList() {
        ArrayList<QuanLyUser> UserList = new ArrayList<QuanLyUser>();
        con = DAO.getConnection();
        String show = "select * from Account_";
        try {
            st = con.createStatement();
            rs = st.executeQuery(show);
            QuanLyUser user;
            while (rs.next()) {
                user = new QuanLyUser(rs.getString("ID"), rs.getString("TenTaiKhoan"), rs.getString("MatKhau"), rs.getString("HoTen"), rs.getString("NgaySinh"), rs.getString("SDT"), rs.getString("VaiTro"), rs.getInt("STT"));
                UserList.add(user);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return UserList;
    }

    public ArrayList<QuanLyUser> UserList_FIND() {
        ArrayList<QuanLyUser> UserList = new ArrayList<QuanLyUser>();
        con = DAO.getConnection();
        String show = "select * from Account_ where TenTaiKhoan Like '" + txtTimKiem.getText() + "%'";
        try {
            st = con.createStatement();
            rs = st.executeQuery(show);
            QuanLyUser user;
            while (rs.next()) {
                user = new QuanLyUser(rs.getString("ID"), rs.getString("TenTaiKhoan"), rs.getString("MatKhau"), rs.getString("HoTen"), rs.getString("NgaySinh"), rs.getString("SDT"), rs.getString("VaiTro"), rs.getInt("STT"));
                UserList.add(user);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return UserList;
    }

    public void Show() {
        ArrayList<QuanLyUser> list = UserList();
        DefaultTableModel model = (DefaultTableModel) tbUser.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            row[0] = i;
            row[1] = list.get(i).getID();
            row[2] = list.get(i).getTenTaiKhoan();
            row[3] = list.get(i).getMatKhau();
            row[4] = list.get(i).getHoTen();
            row[5] = list.get(i).getNgaySinh();
            row[6] = list.get(i).getSĐT();
            row[7] = list.get(i).getVaiTro();
            model.addRow(row);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel A;
    private javax.swing.JRadioButton ADMIN;
    private javax.swing.JLabel B;
    private javax.swing.JLabel C;
    private javax.swing.JLabel D;
    private javax.swing.JLabel F;
    private javax.swing.JRadioButton MEMBER;
    private javax.swing.JButton Xóa;
    private javax.swing.JButton Xóa1;
    private javax.swing.JButton btnReload1;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbUser;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMK;
    private com.toedter.calendar.JDateChooser txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTK;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
