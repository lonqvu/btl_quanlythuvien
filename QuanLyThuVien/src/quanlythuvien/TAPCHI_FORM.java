/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlythuvien;

import Controller.DAO;
import DATA.QuanLySach;
import java.awt.Color;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import quanlythuvien.SACH_FORM;
import DATA.QuanLyTapChi;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.table.TableModel;
import java.sql.PreparedStatement;

/**
 *
 * @author loqco
 */
public class TAPCHI_FORM extends javax.swing.JFrame {

    /**
     * Creates new form AddBooks_Form
     */
    public TAPCHI_FORM() {
        initComponents();
        Date date = new Date();
        txtThangPH.setDate(date);
        Show();
    }
    Connection con = null;
    Statement st = null;
    ResultSet rs = null;

    public ArrayList<QuanLyTapChi> TapChiList() {
        ArrayList<QuanLyTapChi> TapChiList = new ArrayList<QuanLyTapChi>();
        con = DAO.getConnection();
        String show = "select TaiLieu.MaTaiLieu, MaTapChi, TenTapChi, SoPhatHanh, ThangPhatHanh, TenNXB,TenTaiLieu, SoBan from Tap_Chi inner join TaiLieu on Tap_Chi.MaTaiLieu = TaiLieu.MaTaiLieu";
        Statement st;
        ResultSet rs;
        try {

            st = con.createStatement();
            rs = st.executeQuery(show);
            QuanLyTapChi quanlytapchi;
            while (rs.next()) {
                quanlytapchi = new QuanLyTapChi(rs.getString("MaTaiLieu"), rs.getString("MaTapChi"), rs.getString("TentapChi"), rs.getInt("SoPhatHanh"), rs.getString("ThangPhatHanh"), rs.getString("TenNXB"), rs.getInt("SoBan"), rs.getString("TenTaiLieu"));
                TapChiList.add(quanlytapchi);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return TapChiList;
    }

    public ArrayList<QuanLyTapChi> TapChiList_Find() {
        ArrayList<QuanLyTapChi> TapChiList_Find = new ArrayList<QuanLyTapChi>();
        con = DAO.getConnection();
        String show = "select * from Tap_Chi inner join TaiLieu on Tap_Chi.MaTaiLieu = TaiLieu.MaTaiLieu Where TenTapChi LIKE N'" + txtTimKiem.getText() + "%'";
        Statement st;
        ResultSet rs;
        try {

            st = con.createStatement();
            rs = st.executeQuery(show);
            QuanLyTapChi quanlytapchi;
            while (rs.next()) {
                quanlytapchi = new QuanLyTapChi(rs.getString("MaTaiLieu"), rs.getString("MaTapChi"), rs.getString("TentapChi"), rs.getInt("SoPhatHanh"), rs.getString("ThangPhatHanh"), rs.getString("TenNXB"), rs.getInt("SoBan"), rs.getString("TenTaiLieu"));
                TapChiList_Find.add(quanlytapchi);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return TapChiList_Find;
    }

    public void Show() {
        ArrayList<QuanLyTapChi> list = TapChiList();
        DefaultTableModel model = (DefaultTableModel) tbTapChi.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaTaiLieu();
            row[1] = list.get(i).getMaTapChi();
            row[2] = list.get(i).getTenTapChi();
            row[3] = list.get(i).getSoPhatHanh();
            row[4] = list.get(i).getThangPhatHanh();
            row[5] = list.get(i).getTenNXB();
            row[6] = list.get(i).getTenTaiLieu();
            row[7] = list.get(i).getSoBan();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        a2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnXoa = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        a = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        d = new javax.swing.JLabel();
        f = new javax.swing.JLabel();
        e = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTapChi = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaTapChi = new javax.swing.JTextField();
        txtTenTapChi = new javax.swing.JTextField();
        txtSoPH = new javax.swing.JTextField();
        txtThangPH = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtMaTaiLieu = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTenTaiLieu = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNXB = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSoBan = new javax.swing.JTextField();
        A = new javax.swing.JLabel();
        B = new javax.swing.JLabel();
        C = new javax.swing.JLabel();
        D = new javax.swing.JLabel();
        E = new javax.swing.JLabel();
        F = new javax.swing.JLabel();
        btnSua = new javax.swing.JButton();
        btnSua1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnReload1 = new javax.swing.JButton();

        a2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        a2.setText("a");
        a2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a2MouseClicked(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÝ TẠP CHÍ");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Books-1-icon.png"))); // NOI18N
        jLabel2.setText("QUẢN LÝ TẠP CHÍ");

        btnXoa.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Create.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        a.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        a.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aMouseClicked(evt);
            }
        });

        b.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        b.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bMouseClicked(evt);
            }
        });

        c.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        c.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cMouseClicked(evt);
            }
        });

        d.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        d.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dMouseClicked(evt);
            }
        });

        f.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        f.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fMouseClicked(evt);
            }
        });

        e.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        e.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eMouseClicked(evt);
            }
        });

        tbTapChi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Tài liệu", "Mã Tạp Chí", "Tên tạp chí", "Số Phát Hành", "Tháng Phát Hành", "Tên NXB", "Tên tài liệu", "Số bản phát hành"
            }
        ));
        tbTapChi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTapChiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbTapChi);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin tạp chí", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Mã tạp chí");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Tên tạp chí");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Số phát hành");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Tháng phát hành");

        txtSoPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoPHActionPerformed(evt);
            }
        });

        txtThangPH.setToolTipText("fd");
        txtThangPH.setDateFormatString("dd-MM-yyyy");
        txtThangPH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Mã tài liệu");

        txtMaTaiLieu.setText("T002");
        txtMaTaiLieu.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Tên tài liệu");

        txtTenTaiLieu.setText("Tạp Chí");
        txtTenTaiLieu.setEnabled(false);
        txtTenTaiLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenTaiLieuActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("NXB");

        txtNXB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNXBActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Số bản PH");

        A.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        B.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        C.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        D.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        E.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        F.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtThangPH, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtMaTapChi, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenTapChi, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoPH, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(A)
                            .addComponent(B)
                            .addComponent(C))))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaTaiLieu, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addComponent(txtTenTaiLieu)
                    .addComponent(txtNXB)
                    .addComponent(txtSoBan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(E)
                    .addComponent(F))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMaTapChi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTenTapChi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSoPH, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(txtThangPH, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaTaiLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenTaiLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoBan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(F, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(E, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        btnSua.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnSua1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSua1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Refresh.png"))); // NOI18N
        btnSua1.setText("Reset");
        btnSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua1ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm tạp chí", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Search-icon (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnReload1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnReload1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Exit.png"))); // NOI18N
        btnReload1.setText("Cancel");
        btnReload1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReload1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSua1)
                                        .addGap(27, 27, 27)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(a)
                                    .addComponent(b)
                                    .addComponent(c)
                                    .addComponent(d)
                                    .addComponent(f)
                                    .addComponent(e))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(316, 316, 316))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnReload1)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(e))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(a)
                        .addGap(26, 26, 26)
                        .addComponent(b)
                        .addGap(76, 76, 76)
                        .addComponent(c)
                        .addGap(51, 51, 51)
                        .addComponent(d)
                        .addGap(61, 61, 61)
                        .addComponent(f))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReload1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (txtMaTapChi.getText().trim().compareTo("") == 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn tạp chí cần xóa", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
        else{
        try {
            con = DAO.getConnection();
            String xoaString = "DELETE Tap_Chi where MaTapChi = ?";
            PreparedStatement pts = con.prepareStatement(xoaString);
            pts.setString(1, txtMaTapChi.getText());
            int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa " + txtTenTapChi.getText(), "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                pts.executeUpdate();
                DefaultTableModel model = (DefaultTableModel) tbTapChi.getModel();
                model.setRowCount(0);
                Show();
                JOptionPane.showMessageDialog(null, "Xóa tạp chí thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Không thể xóa\nLỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        A.setText("");
        B.setText("");
        C.setText("");
        D.setText("");
        E.setText("");
        F.setText("");
        try {
            if (txtMaTapChi.getText().trim().compareTo("") == 0 || txtTenTapChi.getText().trim().compareTo("") == 0 || txtSoPH.getText().trim().compareTo("") == 0 || txtSoBan.getText().trim().compareTo("") == 0 || txtNXB.getText().trim().compareTo("") == 0) {
                JOptionPane.showConfirmDialog(null, "Thông tin không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                if (txtMaTapChi.getText().trim().compareTo("") == 0) {
                    A.setText("*");
                    A.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Mã Sách không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    //return;
                }

                if (txtTenTapChi.getText().trim().compareTo("") == 0) {
                    B.setText("*");
                    B.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Tên Sách không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    //return;
                }
                if (txtSoPH.getText().trim().compareTo("") == 0) {
                    C.setText("*");
                    C.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Tên tác giả không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    //return;
                }

                if (txtSoBan.getText().trim().compareTo("") == 0) {
                    E.setText("*");
                    E.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Số bản phát hành phải lớn hơn 0 hoặc không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE); 
                }

                if (txtNXB.getText().trim().compareTo("") == 0) {
                    F.setText("*");
                    F.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "NXB không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

                }
            } else if (Integer.parseInt(txtSoBan.getText()) <= 0 || Integer.parseInt(txtSoPH.getText()) <= 0) {
                if (Integer.parseInt(txtSoBan.getText()) <= 0) {
                    E.setText("*");
                    E.setForeground(Color.red);
                    JOptionPane.showMessageDialog(null, "Số bản phải > 0", "lỗi", JOptionPane.ERROR_MESSAGE);
                }
                if (Integer.parseInt(txtSoPH.getText()) <= 0) {
                    C.setText("*");
                    C.setForeground(Color.red);
                    JOptionPane.showMessageDialog(null, "Số bản phát hành phải > 0", "lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                try {
                    con = DAO.getConnection();
                    String themtapchi = "insert Tap_Chi(MaTapChi, TenTapChi, SoPhatHanh, ThangPhatHanh, TenNXB, SoBan, MaTaiLieu) values(?,?,?,?,?,?,?)";
                    PreparedStatement pts = con.prepareStatement(themtapchi);
                    pts.setString(1, txtMaTapChi.getText());
                    pts.setString(2, txtTenTapChi.getText());
                    pts.setString(3, txtSoPH.getText());
                    SimpleDateFormat thang = new SimpleDateFormat("yyyy-MM-dd");
                    String setdate = thang.format(txtThangPH.getDate());
                    pts.setString(4, setdate);
                    pts.setString(5, txtNXB.getText());
                    pts.setString(6, txtSoBan.getText());
                    pts.setString(7, txtMaTaiLieu.getText());
                    int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm tạp chí " + txtTenTapChi.getText() + "!", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (result == JOptionPane.YES_OPTION) {
                        pts.executeUpdate();
                        DefaultTableModel model = (DefaultTableModel) tbTapChi.getModel();
                        model.setRowCount(0);
                        Show();
                        JOptionPane.showMessageDialog(null, "Thêm tạp chí thành công");
                        con.close();
                    }

                } catch (Exception e) {

                    JOptionPane.showConfirmDialog(null, "Không thể thêm\nLỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

                }

            }
        } catch (Exception e) {

            JOptionPane.showConfirmDialog(null, "Sai định dạng\nLỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnThemActionPerformed

    private void aMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_aMouseClicked

    private void bMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bMouseClicked

    private void a2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_a2MouseClicked

    private void cMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cMouseClicked

    private void dMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dMouseClicked

    private void fMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fMouseClicked

    private void eMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_eMouseClicked

    private void txtSoPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoPHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoPHActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        A.setText("");
        B.setText("");
        C.setText("");
        D.setText("");
        E.setText("");
        F.setText("");
        try {

            if (txtMaTapChi.getText().trim().compareTo("") == 0 || txtTenTapChi.getText().trim().compareTo("") == 0 || txtSoPH.getText().trim().compareTo("") == 0 || txtSoBan.getText().trim().compareTo("") == 0 || txtNXB.getText().trim().compareTo("") == 0) {
                JOptionPane.showConfirmDialog(null, "Thông tin không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                if (txtMaTapChi.getText().trim().compareTo("") == 0) {
                    A.setText("*");
                    A.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Mã Sách không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    //return;
                }
                if (txtTenTapChi.getText().trim().compareTo("") == 0) {
                    B.setText("*");
                    B.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Tên Sách không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    //return;
                }
                if (txtSoPH.getText().trim().compareTo("") == 0) {
                    C.setText("*");
                    C.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Tên tác giả không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                    //return;
                }

                if (txtSoBan.getText().trim().compareTo("") == 0) {
                    E.setText("*");
                    E.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "Số bản phát hành phải lớn hơn 0 hoặc không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE); 
                }
                if (txtNXB.getText().trim().compareTo("") == 0) {
                    F.setText("*");
                    F.setForeground(Color.red);
                    //JOptionPane.showConfirmDialog(null, "NXB không được để trống", "Lỗi thêm mới", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);

                }

            } else if (Integer.parseInt(txtSoBan.getText()) <= 0 || Integer.parseInt(txtSoPH.getText()) <= 0) {
                if (Integer.parseInt(txtSoBan.getText()) <= 0) {
                    E.setText("*");
                    E.setForeground(Color.red);
                    JOptionPane.showMessageDialog(null, "Số bản phải > 0", "lỗi", JOptionPane.ERROR_MESSAGE);
                }
                if (Integer.parseInt(txtSoPH.getText()) <= 0) {
                    C.setText("*");
                    C.setForeground(Color.red);
                    JOptionPane.showMessageDialog(null, "Số bản phát hành phải > 0", "lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                try {
                    con = DAO.getConnection();
                    String themtapchi = "UPDATE Tap_Chi SET MaTapChi = ?, TenTapChi = ?, SoPhatHanh = ?, ThangPhatHanh = ?, TenNXB =?, SoBan = ?, MaTaiLieu= ? where MaTapChi = ?";
                    PreparedStatement pts = con.prepareStatement(themtapchi);
                    pts.setString(1, txtMaTapChi.getText());
                    pts.setString(2, txtTenTapChi.getText());
                    pts.setString(3, txtSoPH.getText());
                    SimpleDateFormat thang = new SimpleDateFormat("yyyy-MM-dd");
                    String setdate = thang.format(txtThangPH.getDate());
                    pts.setString(4, setdate);
                    pts.setString(5, txtNXB.getText());
                    pts.setString(6, txtSoBan.getText());
                    pts.setString(7, txtMaTaiLieu.getText());
                    pts.setString(8, txtMaTapChi.getText());
                    int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn sửa tạp chí " + txtTenTapChi.getText() + "!", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (result == JOptionPane.YES_OPTION) {
                        pts.executeUpdate();
                        DefaultTableModel model = (DefaultTableModel) tbTapChi.getModel();
                        model.setRowCount(0);
                        Show();
                        JOptionPane.showMessageDialog(null, "Sửa thông tin tạp chí thành công");
                    }
                } catch (Exception e) {
                    JOptionPane.showConfirmDialog(null, "Không thể thêm\nLỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Sai định dạng\nLỗi: " + e.getMessage(), "Lỗi", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua1ActionPerformed
        A.setText("");
        B.setText("");
        C.setText("");
        D.setText("");
        E.setText("");
        F.setText("");
        txtMaTapChi.setText("");
        txtTenTapChi.setText("");
        txtSoPH.setText("");
        txtTimKiem.setText("");
        txtSoBan.setText("");
        txtNXB.setText("");
        Date date = new Date();
        txtThangPH.setDate(date);
        DefaultTableModel model = (DefaultTableModel) tbTapChi.getModel();
        model.setRowCount(0);
        Show();

    }//GEN-LAST:event_btnSua1ActionPerformed

    private void tbTapChiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTapChiMouseClicked
        try {
            int i = tbTapChi.getSelectedRow();
            TableModel model = tbTapChi.getModel();
            Date hehe = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(i, 4));
            txtThangPH.setDate(hehe);
            txtMaTaiLieu.setText(model.getValueAt(i, 0).toString());
            txtMaTapChi.setText(model.getValueAt(i, 1).toString());
            txtTenTapChi.setText(model.getValueAt(i, 2).toString());
            txtSoPH.setText(model.getValueAt(i, 3).toString());
            txtNXB.setText(model.getValueAt(i, 5).toString());
            txtTenTaiLieu.setText(model.getValueAt(i, 6).toString());
            txtSoBan.setText(model.getValueAt(i, 7).toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tbTapChiMouseClicked

    private void txtNXBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNXBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNXBActionPerformed

    private void txtTenTaiLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenTaiLieuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenTaiLieuActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        try {
            ArrayList<QuanLyTapChi> list = TapChiList_Find();
            DefaultTableModel model = (DefaultTableModel) tbTapChi.getModel();
            model.setRowCount(0);
            Object[] row = new Object[8];
            for (int i = 0; i < list.size(); i++) {
                row[0] = list.get(i).getMaTaiLieu();
                row[1] = list.get(i).getMaTapChi();
                row[2] = list.get(i).getTenTapChi();
                row[3] = list.get(i).getSoPhatHanh();
                row[4] = list.get(i).getThangPhatHanh();
                row[5] = list.get(i).getTenNXB();
                row[6] = list.get(i).getTenTaiLieu();
                row[7] = list.get(i).getSoBan();
                model.addRow(row);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtTimKiemKeyPressed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void btnReload1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReload1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnReload1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TAPCHI_FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TAPCHI_FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TAPCHI_FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TAPCHI_FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TAPCHI_FORM().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel A;
    private javax.swing.JLabel B;
    private javax.swing.JLabel C;
    private javax.swing.JLabel D;
    private javax.swing.JLabel E;
    private javax.swing.JLabel F;
    private javax.swing.JLabel a;
    private javax.swing.JLabel a2;
    private javax.swing.JLabel b;
    private javax.swing.JButton btnReload1;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSua1;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel c;
    private javax.swing.JLabel d;
    private javax.swing.JLabel e;
    private javax.swing.JLabel f;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbTapChi;
    private javax.swing.JTextField txtMaTaiLieu;
    private javax.swing.JTextField txtMaTapChi;
    private javax.swing.JTextField txtNXB;
    private javax.swing.JTextField txtSoBan;
    private javax.swing.JTextField txtSoPH;
    private javax.swing.JTextField txtTenTaiLieu;
    private javax.swing.JTextField txtTenTapChi;
    private com.toedter.calendar.JDateChooser txtThangPH;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
